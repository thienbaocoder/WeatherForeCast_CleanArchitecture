@page "/weather"
@layout MainLayout
@using Microsoft.AspNetCore.Components.Web
@inject WeatherWeb.Application.Abstractions.IWeatherService WeatherService
@inject Microsoft.JSInterop.IJSRuntime JS

<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-lg-8">

      <div class="weather-card p-4 mb-4">
        <!-- Search -->
        <div class="search-box mb-4">
          <input class="form-control search-input" placeholder="Tìm kiếm thành phố..." @bind="query"
            @bind:event="oninput" @onkeydown="HandleKeyDown">
          <button class="search-btn" title="Tìm theo tên" @onclick="Search">
            <i class="fas fa-search"></i>
          </button>
        </div>
        <div class="d-flex justify-content-end mb-3">
          <button class="btn btn-sm btn-outline-primary" @onclick="UseGps">
            <i class="fas fa-location-crosshairs me-1"></i> Dùng GPS của tôi
          </button>
        </div>

        @if (loading)
        {
          <div>Đang tải...</div>
        }
        else if (!string.IsNullOrEmpty(error))
        {
          <div class="alert alert-danger">@error</div>
        }
        else if (vm is not null)
        {
          <!-- Thời tiết hiện tại -->
          <div class="current-weather p-4 mb-4 text-center">
            <h2>@vm.LocationName</h2>
            <div class="d-flex justify-content-center align-items-center">
              <div class="temp-display me-3">@vm.TemperatureC.ToString("0.#")°C</div>
              <div>
                <div class="weather-icon">
                  <i class="@GetIconCss(vm.WeatherCode)"></i>
                </div>
                <div>@(vm.Condition ?? "—")</div>
              </div>
            </div>
            <div class="row mt-3">
              <div class="col-md-4">
                <div class="d-flex align-items-center justify-content-center">
                  <i class="fas fa-wind me-2"></i>
                  <span>@vm.WindSpeed.ToString("0.#") m/s</span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="d-flex align-items-center justify-content-center">
                  <i class="fas fa-map-marker-alt me-2"></i>
                  <span>(@vm.Latitude.ToString("0.###"), @vm.Longitude.ToString("0.###"))</span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="d-flex align-items-center justify-content-center">
                  <i class="fas fa-clock me-2"></i>
                  <span>@vm.ObservedAt</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Dự báo theo giờ -->
          <h4 class="mb-3">Dự báo theo giờ</h4>
          <div class="hourly-forecast mb-4">
            @if (vm.Hourly?.Count > 0)
            {
              @foreach (var h in vm.Hourly)
              {
                <div class="hourly-item">
                  <div>@h.Time.ToLocalTime().ToString("HH:mm")</div>
                  <div class="weather-icon"><i class="@GetIconCss(h.WeatherCode)"></i></div>
                  <div>@h.TempC.ToString("0.#")°C</div>
                </div>
              }
            }
            else
            {
              <div class="text-muted">Không có dữ liệu theo giờ.</div>
            }
          </div>


          <!-- Dự báo 7 ngày -->
          <h4 class="mb-3">Dự báo 7 ngày</h4>
          <div class="daily-forecast">
            @if (vm.Daily?.Count > 0)
            {
              @foreach (var d in vm.Daily)
              {
                <div class="daily-item d-flex justify-content-between align-items-center">
                  <div class="day">@DayLabel(d.Date)</div>
                  <div class="weather-icon"><i class="@GetIconCss(d.WeatherCode)"></i></div>
                  <div class="temps">
                    <span class="max-temp">@d.MaxC.ToString("0.#")°C</span> /
                    <span class="min-temp">@d.MinC.ToString("0.#")°C</span>
                  </div>
                </div>
              }
            }
            else
            {
              <div class="text-muted">Không có dữ liệu 7 ngày.</div>
            }
          </div>

          <!-- Thông tin thời tiết khác -->
          <div class="weather-card p-4 mt-4">
            <h4 class="mb-3">Thông tin thời tiết khác</h4>
            <div class="row">
              <div class="col-md-6 mb-3">
                <div class="d-flex align-items-center">
                  <i class="fas fa-eye me-3"></i>
                  <div>
                    <div class="small text-muted">Tầm nhìn</div>
                    <div class="fw-bold">@((vm.VisibilityKm is double v ? $"{v:0.#} km" : "—"))</div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <div class="d-flex align-items-center">
                  <i class="fas fa-cloud me-3"></i>
                  <div>
                    <div class="small text-muted">Mây che phủ</div>
                    <div class="fw-bold">@((vm.CloudCoverPercent is int c ? $"{c}%" : "—"))</div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <div class="d-flex align-items-center">
                  <i class="fas fa-temperature-low me-3"></i>
                  <div>
                    <div class="small text-muted">Cảm giác như</div>
                    <div class="fw-bold">@((vm.FeelsLikeC is double f ? $"{f:0.#}°C" : "—"))</div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <div class="d-flex align-items-center">
                  <i class="fas fa-compress-alt me-3"></i>
                  <div>
                    <div class="small text-muted">Áp suất</div>
                    <div class="fw-bold">@((vm.PressureHpa is double p ? $"{p:0} hPa" : "—"))</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        }
        else
        {
          <div class="text-muted">Nhập tên thành phố để xem thời tiết.</div>
        }
      </div>

    </div>
  </div>
</div>

@code {
  string query = "Ho Chi Minh";
  bool loading;
  string? error;
  WeatherWeb.Application.Features.Weather.DTOs.WeatherViewModel? vm;
  private static string DayLabel(DateTimeOffset d)
  {
    var local = d.ToLocalTime().Date;
    var today = DateTime.Today;

    if (local == today) return "Hôm nay";
    if (local == today.AddDays(1)) return "Ngày mai";

    return local.DayOfWeek switch
    {
      DayOfWeek.Monday => "Thứ 2",
      DayOfWeek.Tuesday => "Thứ 3",
      DayOfWeek.Wednesday => "Thứ 4",
      DayOfWeek.Thursday => "Thứ 5",
      DayOfWeek.Friday => "Thứ 6",
      DayOfWeek.Saturday => "Thứ 7",
      DayOfWeek.Sunday => "Chủ nhật",
      _ => local.ToString("dd/MM")
    };
  }
  async Task Search()
  {
    loading = true; error = null; vm = null;
    try
    {
      vm = await WeatherService.GetCurrentAsync(query);
      if (vm is null) error = "Không tìm thấy dữ liệu.";
    }
    catch (Exception ex) { error = ex.Message; }
    finally { loading = false; }
  }

  async Task UseGps()
  {
    loading = true; error = null; vm = null;
    StateHasChanged();
    try
    {
      var pos = await JS.InvokeAsync<GeoPos>("weather.getCurrentPosition");
      vm = await WeatherService.GetCurrentByCoordinatesAsync(pos.Latitude, pos.Longitude);
      if (vm is null) error = "Không lấy được dữ liệu theo GPS.";
    }
    catch (Exception ex)
    {
      error = ex.Message;
    }
    finally
    {
      loading = false;
    }
  }

  async Task HandleKeyDown(KeyboardEventArgs e)
  {
    if (e.Key == "Enter") await Search();
  }

  string GetIconCss(int? code) => code switch
  {
    0 => "fas fa-sun",
    1 or 2 => "fas fa-cloud-sun",
    3 => "fas fa-cloud",
    45 or 48 => "fas fa-smog",
    51 or 53 or 55 or 56 or 57 => "fas fa-cloud-meatball",
    61 or 63 or 65 => "fas fa-cloud-rain",
    71 or 73 or 75 => "fas fa-snowflake",
    80 or 81 or 82 => "fas fa-cloud-showers-heavy",
    95 or 96 or 99 => "fas fa-bolt",
    _ => "fas fa-cloud"
  };

  protected override async Task OnInitializedAsync() => await Search();
  public record GeoPos(double Latitude, double Longitude);
}
